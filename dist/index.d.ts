// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   ../discord.js

declare module 'discord-message-handler' {
    import { MessageHandler } from 'discord-message-handler/message-handler';
    export = MessageHandler;
}

declare module 'discord-message-handler/message-handler' {
    import * as Discord from "discord.js";
    import { HandlerBuilder } from "discord-message-handler/handler-builder";
    export class MessageHandler {
        constructor();
        log(messageType: number, filter: string, message: Discord.Message): void;
        setCaseSensitive(isCaseSensitive: boolean): void;
        enableLogging(logFn: Function): void;
        whenMessageContains(text: string): HandlerBuilder;
        whenMessageContainsExact(text: string): HandlerBuilder;
        whenMessageContainsWord(text: string): HandlerBuilder;
        whenMessageContainsOne(array: string[]): HandlerBuilder;
        whenMessageStartsWith(text: string): HandlerBuilder;
        whenMessageEndsWith(text: string): HandlerBuilder;
        onCommand(text: string): HandlerBuilder;
        handleMessage(discordMessage: Discord.Message): void;
    }
}

declare module 'discord-message-handler/handler-builder' {
    import { SimpleCallback } from "discord-message-handler/simple-callback";
    import { CommandCallback } from "discord-message-handler/command-callback";
    export class HandlerConfig {
        type: number;
        query: string;
        action: number;
        actionArgs: any[];
        callback: SimpleCallback | CommandCallback;
        aliases: string;
        minArgs: number;
        errorMessage: string;
    }
    export class HandlerBuilder {
        handler: any;
        constructor();
        type(type: number): this;
        query(query: string | string[]): this;
        reply(text: string): void;
        replySometimes(text: string, chance: number): void;
        replyOne(array: string[]): void;
        then(callback: SimpleCallback): void;
        do(callback: CommandCallback): void;
        minArgs(count: number): this;
        alias(alt: string): this;
        whenInvalid(message: string): this;
    }
}

declare module 'discord-message-handler/simple-callback' {
    import * as Discord from "discord.js";
    export interface SimpleCallback {
        (message: Discord.Message): void;
    }
}

declare module 'discord-message-handler/command-callback' {
    import * as Discord from "discord.js";
    export interface CommandCallback {
        (args: string[], rawArgs: string, message: Discord.Message): void;
    }
}

